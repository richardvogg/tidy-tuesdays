mutate(level=4,short_name=minor_occupation) %>%
distinct(name=paste0(industry,".",major_occupation,".",minor_occupation),
size=employ_n, level, short_name) %>%
select(name,size,level,short_name) %>%
rbind(employed %>%
mutate(size=0,level=3,short_name=paste0(major_occupation)) %>%
distinct(name=paste0(industry,".",major_occupation), size, level,short_name)) %>%
rbind(employed %>% distinct(name=industry) %>% mutate(size=0,level=2,short_name=name)) %>%
rbind(data.frame(name=".",size=0,level=1,short_name=".")) %>%
mutate(new_label = ifelse(level==2,name,NA),
new_fill = ifelse(level%in%c(3,4),short_name,NA),
new_col = ifelse(level==3,short_name,NA))
# Then we have to make a 'graph' object using the igraph library:
mygraph <- graph_from_data_frame( edges, vertices=vertices )
levelslist <- unique(c(vertices$new_fill[vertices$level==3],
vertices$new_fill[vertices$level==4]))
colors <- c("red","lightblue","yellow","green","grey60",
"darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
names(colors) <- levelslist
set.seed(63)
ggraph(mygraph, layout = 'circlepack',circular=TRUE,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
scale_colour_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
theme_void()
colors <- c(rep(NA,5),
"darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
names(colors) <- levelslist
set.seed(63)
ggraph(mygraph, layout = 'circlepack',circular=TRUE,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
scale_colour_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
theme_void()
library(dplyr)
library(ggplot2)
library(ggraph)
library(stringr)
tuesdata <- tidytuesdayR::tt_load(2021, week = 9)
employed <- tuesdata$employed
earn <- tuesdata$earn
#First try
earn %>%
filter(sex=="Both Sexes", race != "All Races", ethnic_origin == "All Origins") %>%
mutate(yearq = paste0(year,"-",quarter)) %>%
filter(age %in% c("16 to 24 years","25 to 54 years","55 years and over")) %>%
ggplot(aes(x = yearq, y = median_weekly_earn, color = age,group=age))+geom_line(size=1)+
facet_wrap(~race)
data("flare")
library(igraph)
employed <- employed %>%
filter(!is.na(industry)) %>%
filter(race_gender=="TOTAL") %>%
filter(year==2020) %>%
filter(employ_n != 0 & !is.na(employ_n))
edges <- employed %>%
distinct(from = ".", to = industry) %>%
rbind(employed %>%
distinct(from=industry,to=paste0(industry,".",major_occupation))) %>%
rbind(employed %>%
distinct(from=paste0(industry,".",major_occupation),
to=paste0(industry,".",major_occupation,".",minor_occupation)))
# Usually we associate another dataset that give information about each node of the dataset:
vertices <- employed %>%
mutate(level=4,short_name=minor_occupation) %>%
distinct(name=paste0(industry,".",major_occupation,".",minor_occupation),
size=employ_n, level, short_name) %>%
select(name,size,level,short_name) %>%
rbind(employed %>%
mutate(size=0,level=3,short_name=paste0(major_occupation)) %>%
distinct(name=paste0(industry,".",major_occupation), size, level,short_name)) %>%
rbind(employed %>% distinct(name=industry) %>% mutate(size=0,level=2,short_name=name)) %>%
rbind(data.frame(name=".",size=0,level=1,short_name=".")) %>%
mutate(new_label = ifelse(level==2,name,NA),
new_fill = ifelse(level%in%c(3,4),short_name,NA),
new_col = ifelse(level==3,short_name,NA))
# Then we have to make a 'graph' object using the igraph library:
mygraph <- graph_from_data_frame( edges, vertices=vertices )
levelslist <- unique(c(vertices$new_fill[vertices$level==3],
vertices$new_fill[vertices$level==4]))
colors <- c(rep(NA,5),
"darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
names(colors) <- levelslist
set.seed(63)
ggraph(mygraph, layout = 'treemap',weight=size) +
geom_node_tile(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
scale_colour_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
theme_void()
library(dplyr)
library(ggplot2)
library(ggraph)
library(stringr)
tuesdata <- tidytuesdayR::tt_load(2021, week = 9)
employed <- tuesdata$employed
earn <- tuesdata$earn
employed <- employed %>%
filter(!is.na(industry)) %>%
filter(race_gender=="TOTAL") %>%
filter(year==2020) %>%
filter(employ_n != 0 & !is.na(employ_n))
edges <- employed %>%
distinct(from = ".", to = industry) %>%
rbind(employed %>%
distinct(from=industry,to=paste0(industry,".",major_occupation))) %>%
rbind(employed %>%
distinct(from=paste0(industry,".",major_occupation),
to=paste0(industry,".",major_occupation,".",minor_occupation)))
# Usually we associate another dataset that give information about each node of the dataset:
vertices <- employed %>%
mutate(level=4,short_name=minor_occupation) %>%
distinct(name=paste0(industry,".",major_occupation,".",minor_occupation),
size=employ_n, level, short_name) %>%
select(name,size,level,short_name) %>%
rbind(employed %>%
mutate(size=0,level=3,short_name=paste0(major_occupation)) %>%
distinct(name=paste0(industry,".",major_occupation), size, level,short_name)) %>%
rbind(employed %>% distinct(name=industry) %>% mutate(size=0,level=2,short_name=name)) %>%
rbind(data.frame(name=".",size=0,level=1,short_name=".")) %>%
mutate(new_label = ifelse(level==2,name,NA),
new_fill = ifelse(level%in%c(3,4),short_name,NA),
new_col = ifelse(level==3,short_name,NA))
# Then we have to make a 'graph' object using the igraph library:
mygraph <- graph_from_data_frame( edges, vertices=vertices )
library(igraph)
# Then we have to make a 'graph' object using the igraph library:
mygraph <- graph_from_data_frame( edges, vertices=vertices )
levelslist <- unique(c(vertices$new_fill[vertices$level==3],
vertices$new_fill[vertices$level==4]))
colors <- c(rep(NA,5),
"darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
ggraph(mygraph, layout = 'treemap',weight=size) +
geom_node_tile(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist[6:16],na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
colors <- c("darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
names(colors) <- levelslist
set.seed(63)
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist[6:16],na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
names(colors) <- levelslist[6:16]
set.seed(63)
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist[6:16],na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
names(colors) <- levelslist[6:16]
set.seed(63)
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist[6:16],na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
# Usually we associate another dataset that give information about each node of the dataset:
vertices <- employed %>%
mutate(level=4,short_name=minor_occupation) %>%
distinct(name=paste0(industry,".",major_occupation,".",minor_occupation),
size=employ_n, level, short_name) %>%
select(name,size,level,short_name) %>%
rbind(employed %>%
mutate(size=0,level=3,short_name=paste0(major_occupation)) %>%
distinct(name=paste0(industry,".",major_occupation), size, level,short_name)) %>%
rbind(employed %>% distinct(name=industry) %>% mutate(size=0,level=2,short_name=name)) %>%
rbind(data.frame(name=".",size=0,level=1,short_name=".")) %>%
mutate(new_label = ifelse(level==2,name,NA),
new_fill = ifelse(level==4,short_name,NA),
new_col = ifelse(level==3,short_name,NA))
# Then we have to make a 'graph' object using the igraph library:
mygraph <- graph_from_data_frame( edges, vertices=vertices )
levelslist <- unique(c(vertices$new_fill[vertices$level==3],
vertices$new_fill[vertices$level==4]))
colors <- c("darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
names(colors) <- levelslist[6:16]
set.seed(63)
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist[6:16],na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
levelslist <- unique(vertices$new_fill[vertices$level==4])
colors <- c("darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
names(colors) <- levelslist[6:16]
names(colors) <- levelslist
set.seed(63)
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist[6:16],na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
colors
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist[1:5],na.translate=FALSE) +
theme_void()
levels3list <- unique(vertices$new_fill[vertices$level==4])
levels3list <- unique(vertices$new_fill[vertices$level==3])
levels4list <- unique(vertices$new_fill[vertices$level==4])
colors <- c("darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
names(colors) <- levels4list
set.seed(63)
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levelslist,na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levelslist,na.translate=FALSE) +
theme_void()
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","lightblue","yellow","green","grey60"),
breaks=levels3list,na.translate=FALSE) +
theme_void()
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = new_fill,col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
theme_void()
levels4list <- unique(vertices$new_fill[vertices$level==4]) %>%
str_wrap(20)
colors <- c("darkred","darksalmon","blue","aquamarine1","orange",
"goldenrod","darkgreen","lightgreen","olivedrab1","grey80","grey40")
names(colors) <- levels4list
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
theme_void()
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
labs(fill="Sub-category")+
theme_void()+
theme(legend.position = c(0.1,0.9))
set.seed(62)
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
labs(fill="Sub-category")+
theme_void()+
theme(legend.position = c(0.1,0.9))
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
labs(fill="Sub-category")+
guides(fill=guide_legend(ncol = 5))+
theme_void()+
theme(legend.position = c(0.1,0.9))
ggraph(mygraph, layout = 'circlepack',,weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
labs(fill="Sub-category")+
guides(fill=guide_legend(ncol = 5))+
theme_void()+
theme(legend.position = c(0.1,0.1))
ggraph(mygraph, layout = 'circlepack',weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
labs(fill="Sub-category")+
guides(fill=guide_legend(ncol = 5))+
theme_void()+
theme(legend.position = c(0.4,0.1))
ggraph(mygraph, layout = 'circlepack',weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
labs(fill="Sub-category")+
guides(fill=guide_legend(ncol = 6))+
theme_void()+
theme(legend.position = c(0.4,0.1))
ggraph(mygraph, layout = 'circlepack',weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
labs(fill="Sub-category")+
guides(fill=guide_legend(ncol = 5))+
theme_void()+
theme(legend.position = c(0.5,0.1))
set.seed(62)
ggraph(mygraph, layout = 'circlepack',weight=size) +
geom_node_circle(aes(fill = str_wrap(new_fill,20),col=new_col),size=2) +
geom_node_text(aes(label=str_wrap(new_label,15))) +
scale_fill_manual(values=colors,breaks=levels4list,na.translate=FALSE) +
scale_colour_manual(values=c("red","green","grey60","yellow","lightblue"),
breaks=levels3list,na.translate=FALSE) +
labs(fill="Sub-category")+
guides(fill=guide_legend(ncol = 5))+
theme_void()+
theme(legend.position = c(0.5,0.1))
levels4list
tuesdata <- tidytuesdayR::tt_load(2021, week = 10)
library(ggplot2)
library(dplyr)
superbowl <- tuesdata$youtube
View(superbowl)
View(superbowl)
superbowl %>%
count(brand,sort=TRUE)
View(superbowl)
superbowl %>%
count(brand,wt=sum(dislike_count),sort=TRUE)
superbowl %>%
group_by(brand) %>%
summarise(sum(dislike_count))
superbowl %>%
count(brand,wt=sum(dislike_count,na.rm=TRUE),sort=TRUE)
superbowl %>%
group_by(brand) %>%
summarise(dislikes=sum(dislike_count,na.rm=TRUE),
views=sum(view_count,na.rm=TRUE),
likes=sum(likes_count,na.rm=TRUE))
superbowl %>%
group_by(brand) %>%
summarise(dislikes=sum(dislike_count,na.rm=TRUE),
views=sum(view_count,na.rm=TRUE),
likes=sum(like_count,na.rm=TRUE))
superbowl %>%
group_by(brand) %>%
summarise(dislikes=sum(dislike_count,na.rm=TRUE),
views=sum(view_count,na.rm=TRUE),
likes=sum(like_count,na.rm=TRUE),
n())
superbowl %>%
group_by(brand) %>%
summarise(dislikes=sum(dislike_count,na.rm=TRUE),
views=sum(view_count,na.rm=TRUE),
likes=sum(like_count,na.rm=TRUE),
favs=sum(favorite_count,na.rm=TRUE),
comm = sum(comment_count,na.rm=TRUE),
n=n())
ggplot(superbowl,aes(x=like_count,y=dislike_count))+geom_point()
ggplot(superbowl,aes(x=like_count,y=dislike_count))+geom_point()+
scale_x_log10()+
scale_y_log10()
ggplot(superbowl,aes(x=like_count,y=dislike_count))+geom_point()+
scale_x_log10()+
scale_y_log10()+
geom_abline(y~x)
ggplot(superbowl,aes(x=like_count,y=dislike_count))+geom_point()+
scale_x_log10()+
scale_y_log10()+
geom_abline(intercept=0,slope=1)
options(scipen=10)
ggplot(superbowl,aes(x=like_count,y=dislike_count))+geom_point()+
scale_x_log10()+
scale_y_log10()+
geom_abline(intercept=0,slope=1)
View(superbowl)
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
ggplot(superbowl,aes(x=like_count,y=dislike_count,col=value))+geom_point()+
scale_x_log10()+
scale_y_log10()+
geom_abline(intercept=0,slope=1)+
facet_wrap(~category)
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category")
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
ggplot(aes(x=like_count,y=dislike_count,col=value))+
geom_point()+
scale_x_log10()+
scale_y_log10()+
geom_abline(intercept=0,slope=1)+
facet_wrap(~category)
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
ggplot(aes(x=like_count,y=dislike_count,col=category,alpha=value))+
geom_point()+
geom_abline(intercept=0,slope=1)+
scale_x_log10()+
scale_y_log10()+
facet_wrap(~category)
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category")
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
group_by(category) %>%
summarise(likes = median(like_count),
dislikes = median(dislike_count))
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
group_by(category) %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm=TRUE))
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
group_by(category)
superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
filter(value) %>%
group_by(category) %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm=TRUE))
category_medians <- superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
filter(value) %>%
group_by(category) %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm=TRUE))
median <- superbowl %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm = TRUE))
total_medians <- superbowl %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm = TRUE))
rm(median)
category_medians <- superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
filter(value) %>%
group_by(category) %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm=TRUE),
n=n())
category_medians
ggplot(category_medians,aes(x=likes,y=dislikes))+
geom_point(aes(size=n,col=category))+
geom_point(data=total_medians,size=5)
total_medians <- superbowl %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm = TRUE),
views = median(view_count, na.rm=TRUE))
category_medians <- superbowl %>%
tidyr::pivot_longer(cols=funny:use_sex,names_to="category") %>%
filter(value) %>%
group_by(category) %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm=TRUE),
views = median(view_count,na.rm=TRUE),
n=n())
total_medians <- superbowl %>%
summarise(likes = median(like_count,na.rm=TRUE),
dislikes = median(dislike_count,na.rm = TRUE),
views = median(view_count, na.rm=TRUE))
ggplot(category_medians,aes(x=views,y=dislikes))+
geom_point(aes(size=n,col=category))+
geom_point(data=total_medians,size=5)
ggplot(category_medians,aes(x=views,y=dislikes))+
geom_point(aes(size=n,col=category))+
geom_point(data=total_medians,size=10,shape=21)
ggplot(category_medians,aes(x=likes,y=dislikes))+
geom_point(aes(size=n,col=category))+
geom_point(data=total_medians,size=10,shape=21)
