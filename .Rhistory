)
)
roll_calls
votes <- roll_calls %>%
filter(date>2010-01-01)
View(votes)
votes <- roll_calls %>%
filter(date>as.Date("2010-01-01"))
View(votes)
View(roll_calls)
View(votes)
votes %>%
count(importantvote)
View(issues)
View(issues)
votes %>%
left_join(issues,by="rcid")
votes %>%
left_join(issues,by="rcid") %>%
count(issue)
unvotes %>%
filter(rcid %in% votes$rcid)
unvotes_decade <- unvotes %>%
filter(rcid %in% votes$rcid)
unvotes_decade <- unvotes %>%
left_join(issues,by="rcid")
unvotes_decade <- unvotes %>%
filter(rcid %in% votes$rcid) %>%
left_join(issues,by="rcid")
View(unvotes)
View(issues)
unvotes %>%
filter(rcid %in% votes$rcid)
View(issues)
unvotes_decade <- unvotes %>%
filter(rcid %in% votes$rcid) %>% View()
unvotes %>%
filter(rcid %in% votes$rcid) %>%
left_join(issues,by="rcid")
unvotes_decade <- unvotes %>%
filter(rcid %in% votes$rcid) %>%
left_join(issues,by="rcid") %>%
group_by(country,country_code,issue) %>%
summarise(perc_yes = sum(vote=="yes")/n(),
perc_no = sum(vote=="no")/n())
View(unvotes_decade)
unvotes_decade <- unvotes %>%
filter(rcid %in% votes$rcid) %>%
left_join(issues,by="rcid") %>%
group_by(country,country_code,issue) %>%
summarise(perc_yes = sum(vote=="yes")/n(),
perc_no = sum(vote=="no")/n()) %>%
filter(!is.na(issue))
View(unvotes_decade)
world %>%
full_join(unvotes_decade,by=c("iso_a2"="country_code"))
world %>%
full_join(unvotes_decade,by=c("iso_a2"="country_code")) %>%
ggplot()+
geom_sf(aes(fill=perc_yes))+
facet_wrap(~issue)
world %>%
full_join(unvotes_decade,by=c("iso_a2"="country_code"))
world %>%
full_join(unvotes_decade,by=c("iso_a2"="country_code")) %>%
ggplot()+
geom_sf(aes(fill=perc_yes))+
facet_wrap(~issue,drop = TRUE)
world %>%
full_join(unvotes_decade,by=c("iso_a2"="country_code")) %>% View()
unvotes_decade <- unvotes %>%
filter(rcid %in% votes$rcid) %>%
left_join(issues,by="rcid") %>%
group_by(country,country_code,issue) %>%
summarise(perc_yes = sum(vote=="yes")/n(),
perc_no = sum(vote=="no")/n()) %>%
filter(!is.na(issue),!is.na(perc_yes))
world %>%
full_join(unvotes_decade,by=c("iso_a2"="country_code")) %>% View()
world %>%
full_join(unvotes_decade,by=c("iso_a2"="country_code")) %>%
ggplot()+
geom_sf(aes(fill=perc_yes))+
facet_wrap(~issue)
View(unvotes_decade)
world %>%
right_join(unvotes_decade,by=c("iso_a2"="country_code")) %>%
ggplot()+
geom_sf(aes(fill=perc_yes))+
facet_wrap(~issue)
library(ggplot2)
tuesdata <- tidytuesdayR::tt_load(2021, week = 14)
sephora <- tuesdata$sephora
View(sephora)
table(sephora$brand)
sephora %>% count(sort=T)
library(dplyr)
sephora %>% count(sort=T)
sephora %>% count(brand,sort=T)
ulta <- tuesdata$ulta
View(ulta)
allShades <- tuesdata$allShades
View(allShades)
allNumbers <- tuesdata$allNumbers
View(allNumbers)
allCategories <- tuesdata$allCategories
View(allCategories)
sorted <- allCategories %>%
group_by(brand) %>%
arrange(lightness) %>%
mutate(rank=rank())
sorted <- allCategories %>%
group_by(brand) %>%
arrange(lightness) %>%
mutate(rank=rank(lightness))
View(sorted)
?rank
sorted <- allCategories %>%
group_by(brand) %>%
arrange(lightness) %>%
mutate(rank=rank(lightness,ties.method = first))
sorted <- allCategories %>%
group_by(brand) %>%
arrange(lightness) %>%
mutate(rank=rank(lightness,ties.method = "first"))
allCategories %>% count(brand,sort=TRUE)
sorted <- allCategories %>%
group_by(brand) %>%
arrange(lightness) %>%
mutate(rank=rank(lightness,ties.method = "first")) %>%
filter(brand=="Dior")
sorted$hex
ggplot(sorted,aes(x=rank,y=1)) + geom_tile() +
scale_fill_manual(values=sorted$hex)
ggplot(sorted,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=sorted$hex)
ggplot(sorted,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=sorted$hex) +
theme(legend.position = "none")
allCategories %>% count(brand,sort=TRUE)
top10 <- allCategories %>% count(brand,sort=TRUE) %>% .$brand
top10 <- allCategories %>% count(brand,sort=TRUE) %>% .$brand[1:10]
top10 <- allCategories %>%
count(brand,sort=TRUE) %>%
slice(1:10) %>%
.$brand
get_brand_colors <- function(brand) {
assign(brand,filter(sorted,brand==brand))
}
get_brand_colors <- function(brand) {
return(filter(sorted,brand==brand))
}
get_brand_colors("bareMinerals")
sorted <- allCategories %>%
group_by(brand) %>%
arrange(brand,lightness) %>%
mutate(rank=rank(lightness,ties.method = "first"))
get_brand_colors <- function(brand) {
return(filter(sorted,brand==brand))
}
get_brand_colors("bareMinerals")
get_brand_colors <- function(brand_name) {
sorted %>%
filter(brand==brand_name)
}
get_brand_colors("bareMinerals")
lapply(top10,function(x) assign(x,get_brand_colors(x)))
plot_brand_colors <- function(brand_data) {
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=sorted$hex) +
theme(legend.position = "none")
}
plots <- lapply(top10,function(x) {
assign(x,x %>% get_brand_colors() %>% plot_brand_colors())
})
plots[[1]]
plots[[2]]
plots[[3]]
plots[[4]]
plots[[10]]
plot_brand_colors <- function(brand_data) {
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=brand_data$hex) +
theme(legend.position = "none")
}
plots <- lapply(top10,function(x) {
assign(x,x %>% get_brand_colors() %>% plot_brand_colors())
})
plots[[1]]
plots[[2]]
plots[[3]]
plots[[4]]
sorted[1,1]
sorted[[1,1]]
plot_brand_colors <- function(brand_data) {
title <- brand_data[[1,1]]
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=brand_data$hex) +
labs(title = title) +
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
}
plots <- lapply(top10,function(x) {
assign(x,x %>% get_brand_colors() %>% plot_brand_colors())
})
(plots[[1]] + plots[[2]]) /
plots[[3]] + plots[[4]]
test <- plots[[2]]
plots[[1]] + plots[[2]]
plots[[Â²]]
plots[[2]]
plots[[3]]
plots[[4]]
plots[[5]]
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=brand_data$hex) +
labs(title = title) +
theme_void()+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
plot_brand_colors <- function(brand_data) {
title <- brand_data[[1,1]]
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=brand_data$hex) +
labs(title = title) +
theme_void()+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
}
plots <- lapply(top10,function(x) {
assign(x,x %>% get_brand_colors() %>% plot_brand_colors())
})
library(patchwork)
plots[2]
plots[1] + plots[2]
g <- plots[[1]]
h <- plots[[2]]
g+h
plots[[1]]+plots[[2]]
plots[[1]] + plots[[2]]
(plots[[1]] + plots[[2]]) /
plots[[3]] + plots[[4]]
(plots[[1]] + plots[[2]]) /
(plots[[3]] + plots[[4]]) /
(plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]]) /
(plots[[9]] + plots[[10]]) /
x
(plots[[1]] + plots[[2]]) /
(plots[[3]] + plots[[4]]) /
(plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]]) /
(plots[[9]] + plots[[10]])
View(allShades)
allShades %>% count(brand,sort=TRUE)
allCategories %>% count(brand,sort=TRUE)
top15 <- allCategories %>%
count(brand,sort=TRUE) %>%
slice(1:15) %>%
.$brand
sorted <- allCategories %>%
group_by(brand) %>%
arrange(brand,lightness) %>%
mutate(rank=rank(lightness,ties.method = "first"))
get_brand_colors <- function(brand_name) {
sorted %>%
filter(brand==brand_name)
}
plot_brand_colors <- function(brand_data) {
title <- brand_data[[1,1]]
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=brand_data$hex) +
labs(title = title) +
theme_void()+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
}
plots <- lapply(top15,function(x) {
assign(x,x %>% get_brand_colors() %>% plot_brand_colors())
})
library(patchwork)
(plots[[1]] + plots[[2]] + plots[[3]]) /
(plots[[4]] + plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]] + plots[[9]]) /
(plots[[10]] + plots[[11]] + plots[[12]]) /
(plots[[13]] + plots[[14]] + plots[[15]])
plots <- lapply(top15,function(x) {
x %>%
get_brand_colors() %>%
plot_brand_colors()
})
library(patchwork)
(plots[[1]] + plots[[2]] + plots[[3]]) /
(plots[[4]] + plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]] + plots[[9]]) /
(plots[[10]] + plots[[11]] + plots[[12]]) /
(plots[[13]] + plots[[14]] + plots[[15]])
library(dplyr)
sysfonts::font_add_google(name = "Annie Use Your Telescope","Annie")
showtext::showtext_auto()
plot_brand_colors <- function(brand_data) {
title <- brand_data[[1,1]]
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=brand_data$hex) +
labs(title = title) +
theme_void()+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(family="Annie",size=12))
}
plots <- lapply(top15,function(x) {
x %>%
get_brand_colors() %>%
plot_brand_colors()
})
library(patchwork)
(plots[[1]] + plots[[2]] + plots[[3]]) /
(plots[[4]] + plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]] + plots[[9]]) /
(plots[[10]] + plots[[11]] + plots[[12]]) /
(plots[[13]] + plots[[14]] + plots[[15]])
plot_brand_colors <- function(brand_data) {
title <- brand_data[[1,1]]
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=brand_data$hex) +
labs(title = title) +
theme_void()+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(family="Annie",size=20))
}
plots <- lapply(top15,function(x) {
x %>%
get_brand_colors() %>%
plot_brand_colors()
})
library(patchwork)
(plots[[1]] + plots[[2]] + plots[[3]]) /
(plots[[4]] + plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]] + plots[[9]]) /
(plots[[10]] + plots[[11]] + plots[[12]]) /
(plots[[13]] + plots[[14]] + plots[[15]])
(plots[[1]] + plots[[2]] + plots[[3]]) /
(plots[[4]] + plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]] + plots[[9]]) /
(plots[[10]] + plots[[11]] + plots[[12]]) /
(plots[[13]] + plots[[14]] + plots[[15]]) +
plot_annotation(title = "The palettes of the brands with most Makeup Shades") &
theme(plot.title = element_text(family="Annie",size=25))
(plots[[1]] + plots[[2]] + plots[[3]]) /
(plots[[4]] + plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]] + plots[[9]]) /
(plots[[10]] + plots[[11]] + plots[[12]]) /
(plots[[13]] + plots[[14]] + plots[[15]]) +
plot_annotation(title = "The palettes of the brands with most Makeup Shades",
caption = "Data: The Pudding") &
theme(plot.title = element_text(family = "Annie", size = 25),
plot.caption = element_text(family="Annie", size = 12))
plot_brand_colors <- function(brand_data) {
title <- brand_data[[1,1]]
ggplot(brand_data,aes(x=rank,y=1,fill=hex)) + geom_tile() +
scale_fill_manual(values=brand_data$hex) +
labs(subtitle = title) +
theme_void()+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.subtitle = element_text(family="Annie",size=20))
}
plots <- lapply(top15,function(x) {
x %>%
get_brand_colors() %>%
plot_brand_colors()
})
library(patchwork)
(plots[[1]] + plots[[2]] + plots[[3]]) /
(plots[[4]] + plots[[5]] + plots[[6]]) /
(plots[[7]] + plots[[8]] + plots[[9]]) /
(plots[[10]] + plots[[11]] + plots[[12]]) /
(plots[[13]] + plots[[14]] + plots[[15]]) +
plot_annotation(title = "The palettes of the brands with most Makeup Shades",
caption = "Data: The Pudding") &
theme(plot.title = element_text(family = "Annie", size = 25),
plot.caption = element_text(family="Annie", size = 12))
library(dplyr)
library(ggplot2)
tuesdata <- tidytuesdayR::tt_load('2021-05-11')
broadband <- tuesdata$broadband
broadband_zip <- tuesdata$broadband_zip
View(broadband)
View(broadband_zip)
View(broadband)
View(broadband_zip)
install.packages("zipcodeR")
tuesdata <- tidytuesdayR::tt_load(2020, week = 13)
tbi_age <- tuesdata$tbi_age
View(tbi_age)
library(dplyr)
library(ggplot2)
tuesdata <- tidytuesdayR::tt_load(2021, week = 21)
survey <- tuesdata$survey
View(survey)
survey %>% count(country, sort = TRUE)
survey %>% count(country, sort = TRUE) %>% View()
library(fuzzymatch)
fuzzymatch::fuzzy_dedupes(survey$country, find_cutoff = TRUE)
fuzzymatch::fuzzy_dedupes(survey$country, find_cutoff = TRUE) %>% View()
fuzzymatch::fuzzy_dedupes(survey$country, find_cutoff = TRUE) %>% View()
new_country <- fuzzymatch::fuzzy_dedupes(survey$country, cutoff_distance = 0.085)
survey <- survey %>%
mutate(country_dedupes = fuzzymatch::fuzzy_dedupes(survey$country,
cutoff_distance = 0.085))
View(survey)
survey %>% count(country, sort = TRUE)
survey %>% count(country_dedupes, sort = TRUE)
survey %>% count(highest_level_of_education_completed, sort = TRUE)
survey %>% count(race, sort = TRUE)
survey %>% count(gender, sort = TRUE)
stringr::str_remove_all("[[:punct:]]")
stringr::str_replace_all("[[:punct:]]","")
stringr::str_replace_all(.,"[[:punct:]]","")
mutate(country_dedupes = stringr::str_remove_all(country, "[[:punct:]]")
)
survey <- survey %>%
mutate(country_dedupes = stringr::str_remove_all(country, "[[:punct:]]"))
View(survey)
survey <- survey %>%
mutate(country_dedupes = stringr::str_remove_all(country, "[[:punct:]]") %>%
tolower())
View(survey)
library(stringr)
survey <- survey %>%
mutate(country_dedupes = str_remove_all(country, "[[:punct:]]") %>%
tolower() %>%
str_replace("us","united states") %>%
str_replace("uk","united kingdom"))
View(survey)
survey %>%
mutate(country_dedupes = str_remove_all(country, "[[:punct:]]") %>%
tolower() %>%
str_replace("us","united states") %>%
str_replace("uk","united kingdom")) %>%
mutate(country_dedupes = fuzzy_dedupes(country_dedupes, find_cutoff = TRUE)) %>% View()
survey %>%
mutate(country_dedupes = str_remove_all(country, "[[:punct:]]") %>%
tolower() %>%
str_replace("us","united states") %>%
str_replace("uk","united kingdom")) %>% View()
survey %>%
mutate(country_dedupes = str_remove_all(country, "[[:punct:]]") %>%
tolower() %>%
str_replace("us","united states") %>%
str_replace("uk","united kingdom")) %>%
.$country_dedupes %>%
fuzzy_dedupes(find_cutoff = TRUE) %>% View()
survey %>%
mutate(country_dedupes = str_remove_all(country, "[[:punct:]]") %>%
tolower() %>%
str_replace("^us[a|]","united states") %>%
str_replace("^uk","united kingdom")) %>%
.$country_dedupes %>%
fuzzy_dedupes(find_cutoff = TRUE) %>% View()
devtools::install_github("richardvogg/fuzzymatch")
library(dplyr)
library(ggplot2)
library(stringr)
library(fuzzymatch)
tuesdata <- tidytuesdayR::tt_load(2021, week = 21)
survey <- tuesdata$survey
survey %>%
mutate(country_dedupes = str_remove_all(country, "[[:punct:]]") %>%
tolower() %>%
str_replace("^us[a|]","united states") %>%
str_replace("^uk","united kingdom")) %>%
.$country_dedupes %>%
fuzzy_dedupes(find_cutoff = TRUE) %>% View()
survey %>%
mutate(country_dedupes = str_remove_all(country, "[[:punct:]]") %>%
tolower() %>%
str_replace("^us[a|]","united states") %>%
str_replace("^uk","united kingdom")) %>%
.$country_dedupes %>%
fuzzy_dedupes(find_cutoff = TRUE) %>% View()
devtools::install_github("richardvogg/fuzzymatch")
library(dplyr)
library(ggplot2)
library(stringr)
library(fuzzymatch)
tuesdata <- tidytuesdayR::tt_load(2021, week = 21)
survey <- tuesdata$survey
survey %>%
mutate(country_dedupes = str_remove_all(country, "[[:punct:]]") %>%
tolower() %>%
str_replace("^us[a|]","united states") %>%
str_replace("^uk","united kingdom")) %>%
.$country_dedupes %>%
fuzzy_dedupes(find_cutoff = TRUE) %>% View()
survey %>% count(country, sort = TRUE) %>% View()
0.01*26232
